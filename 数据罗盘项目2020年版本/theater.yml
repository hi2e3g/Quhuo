compass_knight_form_snap_env:
  context_defaults:
    delay_compute: true
    sync_result_from_cluster: true
    play_on_dask_cluster: true
    dask_client_set_as_default: true
    cluster_client_address: tcp://172.31.54.193:8786
  pre_load_dataset:
    # 大区新财报数据
    - cost_revenue_theater_agg_theater
    # 私教数据
    - compass_coach_label_chain
    # 团队数据
    - std_qplus_team_map
    # 私教下团队骑手数
    - compass_coach_team_knight_num
    # 本月总天数和当前天数
    - compass_current_total_days
    # 无效业主
    - compass_owner_label_invalid_owner
    # 无效私教
    - compass_coach_label_invalid_coach
    # 团队数据
    - std_qplus_team


  play:

    - name: compass_theater_team_knight_num
      sync_result: true
      cooks:
        - use_df:
            key: compass_coach_team_knight_num

        - run_py:
            - |
                df = to_df(df)
                df_coach = df.groupby(['theater_team_id','division_team_id','business_team_id']).agg({'coach_team_id':'count',u'商圈数量_full':'sum',u'骑手人数_full':'sum',u'业主数量_full':'sum'}).reset_index().rename(columns={'coach_team_id':u'私教数量_full'})
                result = df_coach


    # 处理大区基础数据
    - name: compass_theater_label_cost_financial
      sync_result: true
      cooks:
        - use_df:
            key: cost_revenue_theater_agg_theater
            columns: [business_team_id, theater_team_id, wage_cost,theater_own_cost,personnel_cost,rental_housing_cost,governance_cost,recruitment_cost,unexpected_cost]
            rename:
                # theater_own_cost: 大区自身成本
                wage_cost: 本月工资成本
                personnel_cost: 保险费用
                rental_housing_cost: 房屋费用
                governance_cost: 办公管理费
                recruitment_cost: 招聘成本
                unexpected_cost: 意外成本
        - df_select:
            - 'business_team_id in @p1'
            - p1: ['5e818b38887d1f61ebb4e1dd', '5e818b39887d1f61ebb4e595']
        - stash_push_df: []
        - fetch_dataset:
            dataset_type_code: cost_revenue_theater_agg_theater
            dataset_cate: std
            columns: [theater_team_id, wage_cost]
            month_value: prev_month
            ignore_null_error: true
            empty_df_record:
                theater_team_id: '-'
                wage_cost: 0
            rename:
                wage_cost: 上月工资成本
        - stash_push_df: []
        - stash_join_df:
            on: [theater_team_id]
            how: right
            # fillna: 0
            drop_stash: true
        - df_fillna:
            columns: [上月工资成本]
            value: 0
        - push_dataset:
            key: cost_revenue_theater_agg_theater_mid
        - use_df:
            key: cost_revenue_theater_agg_theater_mid
        - df_select:
                - '[本月工资成本] == 0'
        - rename_cols:
            - 上月工资成本: 工资成本
        - fetch_cols:
            columns: [theater_team_id,保险费用,房屋费用,办公管理费,意外成本,招聘成本,工资成本]
        - stash_push_df: []
        - use_df:
            key: cost_revenue_theater_agg_theater_mid
        - df_select:
                - '[本月工资成本] != 0'
        - rename_cols:
            - 本月工资成本: 工资成本
        - fetch_cols:
            columns: [theater_team_id,保险费用,房屋费用,办公管理费,意外成本,招聘成本,工资成本]
        - stash_push_df: []
        - stash_concat_df: 
            drop_stash: True
        - set_meta_month_column:
            - month

        - stash_push_df: []
        - use_df:
            key: compass_current_total_days
        - stash_push_df: []
        - stash_join_df:
            on: [month]
            how: right
            drop_stash: true
        - fetch_cols:
            columns: [theater_team_id,保险费用,房屋费用,办公管理费,意外成本,招聘成本,工资成本,当月总天数,当前天数]

        - df_eval:
            - |
                [工资成本] = [工资成本]/[当月总天数]*[当前天数]
                [大区自身成本] = [工资成本]+[保险费用]+[房屋费用]+[办公管理费]+[招聘成本]+[意外成本]
                [大区自身成本] = [大区自身成本]/100
                [工资成本] = [工资成本]/100
                [保险费用] = [保险费用]/100
                [房屋费用] = [房屋费用]/100
                [办公管理费] = [办公管理费]/100
                [招聘成本] = [招聘成本]/100
                [意外成本] = [意外成本]/100

#        - push_dataset:
#            key: compass_theater_label_cost_financial

    - name: compass_theater_label_base_front
      sync_result: true
      cooks:
        - use_df:
            key: compass_theater_label_cost_financial
        - stash_push_df: []
        - use_df:
            key: compass_coach_label_chain
            columns: [theater_team_id,有单天数,完成单量,效率,奋进骑手,服务骑手,高效骑手,完美骑手,龙,马,牛,虎,猪,猴,羊,狗,兔,鸡,蛇,鼠,十二生肖得分,收入,骑手人数, 业主数量, 精英荟萃, 财大气粗, 自我提升, 商圈数量, 私教总成本,日均单量,私教荣誉比较得分,私教生肖比较得分,业主比较得分,私教比较得分,荣誉骑手数,有单骑手数,营业外收入,主营业务收入,invalid_label]

        - df_select:
            - 'theater_team_id != @p1 & invalid_label != 1'
            - p1: nan

        - add_cols:
            - 私教数量: 1
        - df_groupby:
            by: [theater_team_id]
        - df_sum:
            column: [有单天数,完成单量,效率,奋进骑手,服务骑手,高效骑手,完美骑手,龙,马,牛,虎,猪,猴,羊,狗,兔,鸡,蛇,鼠,十二生肖得分,收入,骑手人数, 业主数量, 私教数量, 商圈数量, 精英荟萃, 财大气粗, 自我提升, 私教总成本,日均单量,私教荣誉比较得分,私教生肖比较得分,业主比较得分,私教比较得分,荣誉骑手数,有单骑手数,营业外收入,主营业务收入]
        - df_reset_index: []
        - stash_push_df: []
        - stash_join_df:
            on: theater_team_id
            how: left
            drop_stash: true

        - stash_push_df: []

        - use_df:
            key: compass_coach_label_invalid_coach
            columns: [theater_team_id, 收入, 自身及其下级成本, 主营业务收入, 营业外收入, 完成单量]
            rename:
              收入: 无效私教收入
              自身及其下级成本: 无效私教成本
              主营业务收入: 无效主营业务收入
              营业外收入: 无效营业外收入
              完成单量: 无效完成单量

        - df_groupby:
            by: theater_team_id
        - df_sum:
            column: [无效私教收入, 无效私教成本, 无效主营业务收入, 无效营业外收入, 无效完成单量]
        - df_reset_index: []

        - stash_push_df: []
        - stash_join_df:
            on: theater_team_id
            how: right
            drop_stash: true

        - df_fillna:
            columns: [无效私教收入, 无效私教成本, 无效主营业务收入, 无效营业外收入, 无效完成单量]
            value: 0.0
        - df_eval:
            - |
                [主营业务收入] = [主营业务收入] + [无效主营业务收入]
                [营业外收入] = [营业外收入] + [无效营业外收入]
                [收入] = [收入] +  [无效私教收入]
                [完成单量] = [完成单量] + [无效完成单量]
                [单均收入] = [主营业务收入]/[完成单量]
                [大区总成本] = [私教总成本] + [大区自身成本] + [无效私教成本]
                [大区利润] = [主营业务收入] - [大区总成本]
                [大区利润率] = [大区利润] / [主营业务收入]
                [大区人均有单天数] = [有单天数] / [骑手人数]
                [大区人均完成单量] = [完成单量] / [骑手人数]
                [大区人均效率] = [效率] / [骑手人数]

        - df_rank:
            rank_cols: [大区总成本]
            ascending: True
            pct: True
            rank_suffix: '_RANK_PCT'

        - df_rank:
            rank_cols: [大区总成本]
            ascending: True

        - df_rank:
            rank_cols: [大区利润, 收入, 主营业务收入, 大区利润率]
            ascending: False
            pct: True
            rank_suffix: '_RANK_PCT'
            exclude_na: False
            na_option: bottom

        - df_rank:
            rank_cols: [大区利润, 收入, 主营业务收入, 大区利润率]
            ascending: False
            exclude_na: False
            na_option: bottom


        #计算排名(百分比)
        - df_rank:
            rank_cols: ['大区自身成本', '工资成本', '保险费用', '房屋费用', '办公管理费', '招聘成本', '意外成本']
            ascending: True
            pct: True
            rank_suffix: '_RANK_PCT'

        - df_rank:
            rank_cols: ['大区自身成本', '工资成本', '保险费用', '房屋费用', '办公管理费', '招聘成本', '意外成本']
            ascending: True





    - name: compass_theater_label_base
      sync_result: true
      cooks:
        
        - use_df:
            key: compass_theater_label_base_front

        - df_eval:
            - |
                [大区成本单均值] = [大区总成本]/[完成单量]
                [大区单均成本收入比] = [大区成本单均值]/[单均收入]

        - df_rank:
            rank_cols: ['大区单均成本收入比']
            ascending: True
            pct: True
            rank_suffix: '_RANK_PCT'
            exclude_na: False
            na_option: bottom

        - df_rank:
            rank_cols: ['大区单均成本收入比']
            ascending: True
            exclude_na: False
            na_option: bottom

        - df_set_column_val_if:
            column: 淘金达人三星
            condition: '[大区单均成本收入比_RANK]<=@t1'
            params:
                t1: 3
            val: 1
            else_val: 0
        - df_set_column_val_if:
            column: 淘金达人二星
            condition: '@t1<[大区单均成本收入比_RANK]<=@t2'
            params:
                t1: 3
                t2: 6
            val: 1
            else_val: 0
        - df_set_column_val_if:
            column: 淘金达人一星
            condition: '@t1<[大区单均成本收入比_RANK]<=@t2'
            params:
                t1: 6
                t2: 9
            val: 1
            else_val: 0
        - stash_push_df: []


        - fetch_dataset:
            dataset_type_code: compass_theater_label_base
            dataset_cate: std
            columns: [theater_team_id, 淘金达人三星,淘金达人二星,淘金达人一星]
            month_value: prev_month
            ignore_null_error: true
            empty_df_record:
                theater_team_id: '-'
                上月淘金达人三星: 10
                上月淘金达人二星: 10
                上月淘金达人一星: 10
            rename:
                淘金达人三星: 上月淘金达人三星
                淘金达人二星: 上月淘金达人二星
                淘金达人一星: 上月淘金达人一星

        - stash_push_df: []

        - stash_join_df:
            on: [theater_team_id]
            how: right
            drop_stash: true

        - df_fillna:
            columns: [上月淘金达人三星,上月淘金达人二星,上月淘金达人一星]
            value: 10


        - df_set_column_val_if:
            column: 自我提升
            condition: '([淘金达人二星] == @t1 & ([上月淘金达人三星] == @t2 | [上月淘金达人一星] == @t1)) | ([淘金达人三星] == @t1 & ([上月淘金达人三星] == @t2 | [上月淘金达人一星] == @t1 | [上月淘金达人二星] == @t1))'
            params:
                t1: 1
                t2: 10
            val: 1
            else_val: 0




        # 大区荣耀标签
        - df_eval:
            - |
                [大区荣誉比较得分] = [私教荣誉比较得分]/[私教数量]
                [大区生肖比较得分] = [私教生肖比较得分]/[私教数量]
                [业主比较得分] = [业主比较得分]/[私教数量]
                [私教比较得分] = [私教比较得分]/[私教数量]

        - df_rank:
            rank_cols: [大区荣誉比较得分, 大区生肖比较得分, 业主比较得分, 私教比较得分]
            ascending: False
            pct: False
            exclude_na: False
            na_option: bottom

        - df_rank:
            rank_cols: [大区荣誉比较得分, 大区生肖比较得分, 业主比较得分, 私教比较得分]
            ascending: False
            pct: True
            rank_suffix: '_RANK_PCT'
            exclude_na: False
            na_option: bottom


        - df_set_column_val_if:
            column: 堂主
            condition: '[大区荣誉比较得分_RANK]<@t1'
            params:
              t1: 6
            val: 1
            else_val: 0
        - df_set_column_val_if:
            column: 掌门
            condition: '[大区生肖比较得分_RANK]<@t1'
            params:
              t1: 6
            val: 1
            else_val: 0
        - df_set_column_val_if:
            column: 宗师
            condition: '[业主比较得分_RANK]<@t1'
            params:
              t1: 6
            val: 1
            else_val: 0
        - df_set_column_val_if:
            column: 盟主
            condition: '[私教比较得分_RANK]<@t1'
            params:
              t1: 6
            val: 1
            else_val: 0
        # # 计算荣誉积分和私教综合积分
        - df_eval:
            exp_str: '[荣誉积分] = [淘金达人三星]*3 + [淘金达人二星]*2 + [淘金达人一星]*1'
        - df_eval:
            exp_str: '[大区综合积分]= [荣誉积分] + [堂主]*2 + [掌门]*5 + [宗师]*4 + [盟主]*3'

        # # # 计算私教综合排名
        - df_rank:
            rank_cols: [大区综合积分]
            ascending: False
        - df_rank:
            rank_cols: [大区综合积分]
            ascending: False
            pct: True
            rank_suffix: '_RANK_PCT'
        - df_eval:
            exp_str: '[大区综合积分_DEFEAT_PCT] = 1 - [大区综合积分_RANK_PCT]'
        - df_set_column_val_if:
            column: 王者之师
            condition: '[大区综合积分_RANK] < @t1'
            params:
              t1: 6
            val: 1
            else_val: 0

        # 荣耀骑手占比 及 商圈生肖占比x
        - df_eval:
            - |
                [鼠占比] = [鼠]/[商圈数量]
                [蛇占比] = [蛇]/[商圈数量]
                [鸡占比] = [鸡]/[商圈数量]
                [兔占比] = [兔]/[商圈数量]
                [狗占比] = [狗]/[商圈数量]
                [羊占比] = [羊]/[商圈数量]
                [猴占比] = [猴]/[商圈数量]
                [猪占比] = [猪]/[商圈数量]
                [虎占比] = [虎]/[商圈数量]
                [牛占比] = [牛]/[商圈数量]
                [马占比] = [马]/[商圈数量]
                [龙占比] = [龙]/[商圈数量]
                [奋进骑手占比] = [奋进骑手]/[骑手人数]
                [高效骑手占比] = [高效骑手]/[骑手人数]
                [服务骑手占比] = [服务骑手]/[骑手人数]
                [完美骑手占比] = [完美骑手]/[骑手人数]
        - df_fillna:
            columns: [鼠占比,蛇占比,鸡占比,兔占比,狗占比,羊占比,猴占比,猪占比,虎占比,牛占比,马占比,龙占比]
            value: 0.0

        - stash_push_df: []

        - use_df:
            key: std_qplus_team_map
            columns: [theater_team_name,theater_team_id,business_team_name,business_team_id,division_team_name,division_team_id]
        - drop_duplicates:
            - [theater_team_name,theater_team_id,business_team_name,business_team_id,division_team_name,division_team_id]

        - stash_push_df: []

        - stash_join_df:
            on: theater_team_id
            how: right
            drop_stash: true

        - stash_push_df: []


        - use_df:
            key: compass_theater_team_knight_num
        - df_groupby:
            by: theater_team_id
        - df_sum:
            column: [业主数量_full,骑手人数_full,商圈数量_full,私教数量_full]
        - df_reset_index: []

        - stash_push_df: []

        - stash_join_df:
            on: theater_team_id
            how: right
            drop_stash: true


    - name: compass_theater_label_invalid_theater
      sync_result: true
      cooks:
        - use_df:
            key: compass_theater_label_cost_financial
            columns: [theater_team_id, 大区自身成本]
        - stash_push_df: []

        - use_df:
            key: compass_theater_label_base
            columns: [theater_team_id]
        - add_cols:
            - invalid_label: 0

        - stash_push_df: []
        - stash_join_df:
            on: theater_team_id
            how: right
            drop_stash: true

        - df_select:
            -  'invalid_label != 0'

        - stash_push_df: []

        - use_df:
            key: std_qplus_team
            columns: [team_id,is_invalid,team_code]
            rename:
              team_id: theater_team_id
        - stash_push_df: []
        - stash_join_df:
            on: theater_team_id
            how: right
            drop_stash: true
        - stash_push_df: []

        - use_df:
            key: compass_coach_label_chain
            columns: [theater_team_id,私教总成本,收入,invalid_label, 主营业务收入, 营业外收入, 完成单量]

        - df_select:
            - 'invalid_label == 1'
        - df_groupby:
            by: [theater_team_id]
        - df_sum:
            column: [私教总成本,收入, 主营业务收入, 营业外收入, 完成单量]
        - df_reset_index: []
        - run_py:
            - |
                df = to_df(df)
                if df.index.size == 0:
                    df.loc[0,[u'theater_team_id']] = [u'occupied_code']
                result = to_dd(df)
        - stash_push_df: []
        - stash_join_df:
            on: theater_team_id
            how: right
            drop_stash: true

        - df_fillna:
            columns: [私教总成本,收入, 主营业务收入, 营业外收入, 完成单量]
            value: 0.0


        - stash_push_df: []
        - use_df:
            key: compass_coach_label_invalid_coach
            columns: [theater_team_id, 收入, 自身及其下级成本, 主营业务收入, 营业外收入, 完成单量]
            rename:
              收入: 无效私教收入
              自身及其下级成本: 无效私教成本
              主营业务收入: 无效主营业务收入
              营业外收入: 无效营业外收入
              完成单量: 无效完成单量

        - df_groupby:
            by: theater_team_id
        - df_sum:
            column: [无效私教收入, 无效私教成本, 无效主营业务收入, 无效营业外收入, 无效完成单量]
        - df_reset_index: []

        - stash_push_df: []
        - stash_join_df:
            on: theater_team_id
            how: right
            drop_stash: true

        - df_fillna:
            columns: [无效私教收入, 无效私教成本, 无效主营业务收入, 无效营业外收入, 无效完成单量]
            value: 0.0

        - df_eval:
            - |
                [私教总成本] = [私教总成本] +  [无效私教成本]
                [收入] = [收入] +  [无效私教收入]
                [主营业务收入] = [主营业务收入] +  [无效主营业务收入]
                [营业外收入] = [营业外收入] + [无效营业外收入]
                [完成单量] = [完成单量] + [无效完成单量]
        - stash_push_df: []

        - use_df:
            key: std_qplus_team_map
            columns: [theater_team_id, theater_team_name, division_team_id, division_team_name]
        - drop_duplicates:
            - [theater_team_id, theater_team_name, division_team_id, division_team_name]
        - stash_push_df: []
        - stash_join_df:
            on: theater_team_id
            how: right
            drop_stash: true

        - df_eval:
            - |
                [自身及其下级成本] = [私教总成本] + [大区自身成本]


    # 与上月的大区结果做差值
    - name: compass_theater_label_chain
      sync_result: true
      cooks:
        - fetch_dataset:
            dataset_type_code: compass_theater_label_base
            dataset_cate: std
            columns: [theater_team_id, 大区综合积分]
            month_value: prev_month
            ignore_null_error: true
            empty_df_record:
                theater_team_id: '-'
                上月大区综合积分: 0
            rename:
                大区综合积分: 上月大区综合积分

        - stash_push_df: []
        - use_df:
            key: compass_theater_label_base
        - stash_push_df: []

        - stash_join_df:
            on: [theater_team_id]
            how: left
            drop_stash: true

        - df_fillna:
            columns: [上月大区综合积分]
            value: 0.0

        - df_eval:
            exp_str: '[大区比较得分] = [大区综合积分] - [上月大区综合积分]'

        - dask_apply_dtypes:
            dtypes:
              business_team_name: unicode
              division_team_name: unicode
              theater_team_id: unicode
              theater_team_name: unicode
              business_team_id: unicode
              division_team_id: unicode
        - set_meta_month_column:
            - month


    # 罗盘无效团队
    - name: compass_invalid_team
      sync_result: true
      cooks:
        - use_df:
            key: compass_owner_label_invalid_owner
            columns: [owner_team_id,owner_team_name,coach_team_id,coach_team_name,team_code,自身成本,自身及其下级成本,division_team_id,收入, 主营业务收入, 营业外收入, 完成单量]
            rename:
              owner_team_id: 团队ID
              owner_team_name: 团队名称
              coach_team_id: 上级团队ID
              coach_team_name: 上级团队
              team_code: 团队编码

        - add_cols:
            - 团队类型: 业主
        - stash_push_df: []


        - use_df:
            key: compass_coach_label_invalid_coach
            columns: [coach_team_id,coach_team_name,theater_team_id,theater_team_name,team_code,私教自身成本,自身及其下级成本,division_team_id,收入, 主营业务收入, 营业外收入, 完成单量]
            rename:
              coach_team_id: 团队ID
              coach_team_name: 团队名称
              theater_team_id: 上级团队ID
              theater_team_name: 上级团队
              team_code: 团队编码
              私教自身成本: 自身成本

        - add_cols:
            - 团队类型: 私教
        - stash_push_df: []

        - use_df:
            key: compass_theater_label_invalid_theater
            columns: [theater_team_id,theater_team_name,division_team_id,division_team_name,team_code,大区自身成本,自身及其下级成本,收入, 主营业务收入, 营业外收入, 完成单量]
            rename:
              theater_team_id: 团队ID
              theater_team_name: 团队名称
              division_team_name: 上级团队
              team_code: 团队编码
              大区自身成本: 自身成本
        - run_py:
            - |
              df[u'上级团队ID'] = df[u'division_team_id']
              result = df
        - add_cols:
            - 团队类型: 大区
        - stash_push_df: []
        - stash_concat_df:
            drop_stash: True


















