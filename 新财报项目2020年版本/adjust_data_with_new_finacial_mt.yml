
mt_month_env:
  context_defaults:
    platform_code: meituan
    play_on_dask_cluster: true
    delay_compute: true
    dask_client_set_as_default: true
    sync_result_from_cluster: true
    cluster_client_address: 'tcp://172.31.54.193:8786'
  pre_load_dataset:
    # 新财报数据
    - cost_revenue_dc_agg_dc
    - std_qplus_dc
    - mt_teams_basic_lable_by_daily_t2
    - salaryflow-std
    - mt_dc_start_level_by_daily_t2


  play:
    - name: mt_cost_revenue_dc_agg_dc_by_monthly
      sync_result: true
      cooks:
        - use_df:
            key: std_qplus_dc
            columns: [vendor_dc_id,dc_id, platform_code]
            rename:
                vendor_dc_id: 站点ID
        - stash_push_df: []
        - use_df:
            key: cost_revenue_dc_agg_dc
            columns: [dc_id,'51001','41001','41002','41003','41005','41006','41004','41007','41008','41009','41010','41017','41102','41103']
            rename: 
              '51001': 结算单量
              '41001': 基础收入
              '41002': kpi奖励收入
              '41003': 政策收入
              '41005': 政策性收入_商权益
              '41006': 政策性收入_其他
              '41004': 运营罚款收入
              '41007': 履约扣罚
              '41008': 骑手活动扣罚
              '41009': 其他常态扣罚
              '41010': 其他非常态扣罚
              '41017': 政策收入_强分摊
              '41102': 站点变卖损益
              '41103': 物资变卖收入
        - df_eval:
            - |
               [基础收入] =  [基础收入] / 100
               [kpi奖励收入] =  [kpi奖励收入] / 100
               [政策收入] =  [政策收入] / 100
               [政策性收入_商权益] =  [政策性收入_商权益] / 100
               [政策性收入_其他] =  [政策性收入_其他] / 100
               [运营罚款收入] =  [运营罚款收入] / 100
               [履约扣罚] =  [履约扣罚] / 100
               [骑手活动扣罚] =  [骑手活动扣罚] / 100
               [其他常态扣罚] =  [其他常态扣罚] / 100
               [其他非常态扣罚] =  [其他非常态扣罚] / 100
               [政策收入_强分摊] =  [政策收入_强分摊] / 100
               [站点变卖损益] =  [站点变卖损益] / 100
               [物资变卖收入] =  [物资变卖收入] / 100
        - df_round:
            columns: [基础收入, kpi奖励收入, 政策收入, 政策性收入_商权益, 政策性收入_其他, 运营罚款收入, 履约扣罚, 骑手活动扣罚, 其他常态扣罚, 其他非常态扣罚, 政策收入_强分摊, 站点变卖损益, 物资变卖收入]
            precision: 2
        - stash_push_df: []
        - stash_join_df:
            on: dc_id
            how: left
            drop_stash: true
        - df_select:
            - 'platform_code == @p1'
            - p1: meituan
        - set_meta_month_column:
            - monthmt_worker

    - name: mt_teams_basic_lable_by_daily_t2
      sync_result: true
      cooks:
        - use_df:
            key: mt_cost_revenue_dc_agg_dc_by_monthly
            rename:
              基础收入: 收入小计
              kpi奖励收入: 评星奖惩总额
              政策性收入_其他: 政策性收入_调账奖惩
              骑手活动扣罚: 骑手关怀计划出资
              其他常态扣罚: 其他常态扣罚_调账奖惩
              其他非常态扣罚: 其他非常态扣罚_调账奖惩
        - add_cols:
            - 活动预付款扣减: 0.00 
              骑手活动扣罚款_调账奖惩: 0.00
              平台税金返还_调账奖惩: 0.00
              平台奖励_活动: 0.00
              平台奖励_调账: 0.00
              平台奖励_骑手: 0.00
              非运营罚款_调账奖惩: 0.00
              扣罚不开票_调账奖惩: 0.00

        - stash_push_df: []
        - use_df:
            key: mt_teams_basic_lable_by_daily_t2
            columns: [dc_id, 订单天数, 当月总天数, 餐损赔付, 固定惩罚, 履约罚单扣款, 配送服务2_0违规扣款]
        - stash_push_df: []

        - stash_join_df:
            on: dc_id
            how: right
            drop_stash: true
        - df_fillna:
            columns: [订单天数, 当月总天数, 餐损赔付, 固定惩罚, 履约罚单扣款, 配送服务2_0违规扣款]
            value: 0.0
        - df_eval:
            - |
                [履约扣罚_调账奖惩] = [履约扣罚] - [餐损赔付] - [固定惩罚] + [履约罚单扣款] - [配送服务2_0违规扣款]
                [动态日均单量] =  [结算单量] / [订单天数]
                [当月预估总结算单量] =  [结算单量]
        - df_reset_index:
            drop: true
        - run_py:
            - |
                df = to_df(df)
                df.loc[df.loc[:,u'订单天数']==0, u'动态日均单量'] =  0
                result = df
        - set_meta_month_column:
            - month
        

    - name: mt_cost_knight_by_daily_t2
      sync_result: true
      cooks:
        - use_df:
            key: std_qplus_dc
            columns: [vendor_dc_id, dc_id,platform_code]
        - df_select:
            - 'platform_code == @p1'
            - p1: meituan
        - stash_push_df: []
        # 成本数据
        - use_df:
            key: salaryflow-std
            columns:
              [BOSS商圈ID, 人员ID, money,platform_code,cate]
            rename:
              money: '6100101'
              BOSS商圈ID: dc_id
        - df_select:
            - '(platform_code == @p1) & ([cate] == @p2)'
            - p1: meituan
              p2: '1'
        - df_groupby:
            by: [dc_id]
        - df_sum:
            column: '6100101'
        - df_reset_index: []
        - stash_push_df: []
        - stash_join_df:
            on: dc_id
            how: right
            drop_stash: true
        - df_fillna:
            columns: ['6100101']
            value: 0
        - stash_push_df: []

        # 将6100102的成本加入到骑手商圈骑手成本中
        - use_df:
            key: cost_revenue_dc_agg_dc
            columns:
              ['6100102', dc_id]
        - stash_push_df: []

        - stash_join_df:
            on: dc_id
            how: right
            drop_stash: true
        - df_fillna:
            columns: '6100102'
            value: 0.0

        - df_eval:
            - |
                [6100102] = [6100102]/100
                [商圈骑手成本] = [6100101] + [6100102]
        - set_meta_month_column:
            - month



    - name: mt_dc_start_level_by_daily_t2
      sync_result: true
      cooks:
        # 形成表格样式[dc_id,服务质量分,质量星级]
        - use_df:
            key: std_qplus_dc
            columns: [dc_id, star_level]
            rename:
                star_level: 质量星级
        - run_py:
          - | 
              df[u'质量星级'] = df[u'质量星级'].apply(lambda x: str(int(x)) + u'星' if int(x)!= 0 else np.nan)
              result = df
        - stash_push_df: []
        - use_df:
            key: mt_dc_start_level_by_daily_t2
            columns: [dc_id,服务质量分]
        - stash_push_df: []
        - stash_join_df:
            on: dc_id
            how: left
            drop_stash: true
        - set_meta_month_column:
            - month
